{"version":3,"sources":["components/Navbar/Navbar.module.css","features/authorization/forgot/ui/PasswordRestore/Restore.module.css","components/Input/Input.module.css","components/Test/Test.module.css","features/authorization/forgot/ui/NewPassword/NewPassword.module.css","components/Paginator/Paginator.module.css","components/Button/Button.module.css","components/Checkbox/Checkbox.module.css","features/authorization/forgot/ui/SendEmail/SendEmail.module.css","components/Table/Table.module.css","components/Select/SuperSelect.module.css","bll/profileReducer.ts","bll/loginReducer.ts","components/Login/Login.tsx","components/Profile/Profile.tsx","components/Input/Input.tsx","components/Button/Button.tsx","features/authorization/signUp/SignUp.tsx","features/authorization/forgot/dal/ForgotApi.ts","bll/passwordRecoverReducer.ts","bll/signUpReducer.ts","features/authorization/signUp/SignUpContainer.tsx","components/Checkbox/Checkbox.tsx","components/Test/Test.tsx","components/Error.tsx","features/authorization/forgot/ui/SendEmail/SendEmail.tsx","features/authorization/forgot/ui/PasswordRestore/Restore.tsx","features/authorization/forgot/ui/PasswordRestore/PasswordRestoreContainer.tsx","features/authorization/forgot/ui/NewPassword/NewPassword.tsx","features/authorization/forgot/ui/NewPassword/NewPasswordContainer.tsx","components/Table/CardPacks/CardPacksAPI.ts","components/Table/CardPacks/CardPacksReducer.ts","components/Table/CardPacks/CardPack/CardPack.tsx","components/Select/SuperSelect.tsx","components/Paginator/Paginator.tsx","components/Sorting/Sorting.tsx","components/Table/Table.tsx","components/Routes.tsx","components/Navbar/sidebarData.ts","components/Navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","bll/FirstReducer.ts","bll/Store.ts","index.tsx","components/Login/Login.module.css"],"names":["module","exports","initialState","user","_id","email","name","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","avatar","setUser","userData","type","isLogged","loginTC","password","dispatch","authAPI","login","then","response","data","loggingInAC","catch","loginFailAC","instance","axios","create","withCredentials","baseURL","post","me","logout","delete","Login","useDispatch","useState","setEmail","setPassword","errorShow","setErrorShow","useSelector","state","loginReducer","to","onLoginButtonClick","a","className","styles","loginPage","formWrapper","pageTitle","signIn","label","value","onChange","e","text","currentTarget","input","forgot","onClick","button","dontHaveAcc","signUp","Profile","profileReducer","style","width","height","src","alt","SuperInputText","onChangeText","onKeyPress","onEnter","restProps","spanClassName","finalInputClassName","errorInput","key","SuperButton","SignUp","props","onChangeEmail","onChangePassword","onClickHandler","isFetching","loading","container","placeholder","Button","disabled","instanceDev","registrationAPI","from","message","setNewPassword","sendEmail","payload","setError","isRegistrationSuccessful","toggleIsFetching","SignUpContainer","registration","test","length","err","finally","signUpTC","SuperCheckbox","onChangeChecked","children","checked","checkbox","Test","setText","testContainer","inputContainer","Input","buttonContainer","checkboxContainer","Checkbox","Error","SendEmail","Restore","loadingBox","PasswordRestoreContainer","recovery","res","console","log","recoverTC","NewPassword","onSubmit","confirmPass","onChangeConfirmPass","NewPasswordContainer","token","useParams","pass","setPass","setConfirmPass","resetPasswordToken","newPassword","cardPacksAPI","pageCount","page","sortPacks","get","params","id","cardsPack","put","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","getCardPacksTC","getState","cards","setCardPacks","setTotalItemsCount","totalItemsCount","getSorting","sortPack","CardPack","cardPack","cardsCount","user_name","deleteCardPack","editCardPack","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","select","Paginator","currentPage","pageSize","pageItems","portionNumber","setPortionNumber","setValue","pagesCount","Math","ceil","pages","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","paginator","items","filter","p","m","selectedPage","pageNumber","setCurrentPageAC","Sorting","sortName","Table","loggedIn","useEffect","deleteCardPackTC","updateCardPackTC","s","table","PATH","Routing","path","element","sidebarData","title","Navbar","sidebar","setSidebar","isLoggedIn","showSidebar","navbar","menuBars","navMenuItems","navbarToggle","item","index","navText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","firstReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49cb00b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2WXqT\",\"menuBars\":\"Navbar_menuBars__2cDZU\",\"navMenu\":\"Navbar_navMenu__2ienp\",\"active\":\"Navbar_active__1BaS_\",\"navText\":\"Navbar_navText__1-LJE\",\"navMenuItems\":\"Navbar_navMenuItems__3FqBf\",\"navbarToggle\":\"Navbar_navbarToggle__3evBn\",\"login\":\"Navbar_login__1r_PU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Restore_container__37OMl\",\"loading\":\"Restore_loading__31Hvd\",\"loadingBox\":\"Restore_loadingBox__1VDbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2ofw-\",\"errorInput\":\"Input_errorInput__1Ykie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testContainer\":\"Test_testContainer__2Lcud\",\"inputContainer\":\"Test_inputContainer__-fbwL\",\"buttonContainer\":\"Test_buttonContainer__1RDjH\",\"checkboxContainer\":\"Test_checkboxContainer__y5A1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewPassword_container__22MQ8\",\"loading\":\"NewPassword_loading__3p99U\",\"loadingBox\":\"NewPassword_loadingBox__2sRvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3f3MM\",\"pageNumber\":\"Paginator_pageNumber__17_GB\",\"selectedPage\":\"Paginator_selectedPage__KdAmm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2UQgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__3w1ci\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SendEmail_container__1cIeP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__29GYV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__3Fqzg\"};","let initialState : InitialStateType = {\r\n    user: {\r\n        _id: \"fake_ID\",\r\n        email: \"here is my email\",\r\n        name: \"What for do i need a name , i have id\",\r\n        publicCardPacksCount: 0,\r\n        created: null,\r\n        updated: null,\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: \"no errors\",\r\n        avatar: \"some link will be here\"\r\n    },\r\n\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_USER\": {\r\n            return {...state, user : {...action.userData}}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setUser = (userData: UserType) => ({\r\n    type: \"SET_USER\",\r\n    userData\r\n} as const)\r\n\r\n//TYPES\r\n\r\nexport type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date | null;\r\n    updated: Date | null;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\ntype InitialStateType = {\r\n    user : UserType\r\n}\r\ntype randomProfileActionsActionType = ReturnType<typeof setUser>\r\ntype ActionType = randomProfileActionsActionType","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../components/Login/Login\";\r\nimport {setUser} from \"./profileReducer\";\r\n\r\nlet initialState: authReducerStateType = {\r\n    isLogged: false,\r\n    error: \"\",\r\n}\r\n\r\nexport const loginReducer = (state = initialState, action: UnionActionType_LOGIN_REDUCER): authReducerStateType => {\r\n    switch (action.type) {\r\n        case \"LOGGING_IN\":{\r\n            return {...state,isLogged : action.isLogged}\r\n        }\r\n        case \"LOGIN_FAILED\":{\r\n            return {...state,error : action.error}\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\n//THUNKS\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => {\r\n    return (dispatch: Dispatch) => {\r\n        authAPI.login(email, password, rememberMe)\r\n            .then((response) => {\r\n                if(response.data._id){\r\n                    dispatch(loggingInAC(true))\r\n                    dispatch(setUser(response.data))\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                dispatch(loginFailAC(error.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const authMe = () => (dispatch:Dispatch) => {\r\n    authAPI.me()\r\n        .then(res=> {\r\n            dispatch(loggingInAC(true))\r\n            dispatch(setUser(res.data))\r\n        })\r\n        .catch(()=> {\r\n            dispatch(loggingInAC(false))\r\n        })\r\n}\r\n\r\nexport const logout = () => (dispatch:Dispatch) => {\r\n    authAPI.logout()\r\n        .then((res)=> {\r\n            dispatch(loggingInAC(false))\r\n        })\r\n}\r\n\r\n// ACTION CREATORS\r\nconst loginFailAC = (error: string) => ({\r\n    type: \"LOGIN_FAILED\",\r\n    error\r\n}as const)\r\n\r\nconst loggingInAC = (isLogged: boolean) => ({\r\n    type: \"LOGGING_IN\",\r\n    isLogged\r\n}as const)\r\n\r\n//TYPES\r\n\r\ntype authReducerStateType = {\r\n    isLogged: boolean\r\n    error: string\r\n}\r\n\r\ntype UnionActionType_LOGIN_REDUCER = LoginFailActionType | LoggingInActionType\r\n\r\ntype LoginFailActionType = ReturnType<typeof loginFailAC>\r\ntype LoggingInActionType = ReturnType<typeof loggingInAC>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginTC } from \"../../bll/loginReducer\";\r\nimport { AppRootStoreType } from \"../../bll/Store\";\r\nimport { Navigate, NavLink } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\"\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"http://localhost:7542/2.0/\"\r\n    // \"http://localhost:7542/2.0/\"\r\n})\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    me(){\r\n        return instance.post(`auth/me`)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/me`)\r\n    }\r\n}\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState(\"nya-admin@nya.nya1\") //nya-admin@nya.nya\r\n    let [password, setPassword] = useState(\"1qazxcvBG\") // 1qazxcvBG\r\n    let [rememberMe, setRememberMe] = useState(true)\r\n    let [errorShow, setErrorShow] = useState(false)\r\n\r\n    const isLogged = useSelector<AppRootStoreType, boolean>(state => state.loginReducer.isLogged)\r\n    const error = useSelector<AppRootStoreType, string>(state => state.loginReducer.error)\r\n\r\n    if (isLogged) {\r\n        return <Navigate to=\"/profile\"/>;\r\n    }\r\n\r\n    const onEmailChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorShow(false)\r\n        let text = e.currentTarget.value\r\n        setEmail(text)\r\n    }\r\n    const onPasswordChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorShow(false)\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n    const onLoginButtonClick = async () => {\r\n        dispatch(loginTC(email, password, rememberMe))\r\n        setErrorShow(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.loginPage}>\r\n            <form className={styles.formWrapper}>\r\n                <h1 className={styles.pageTitle}>It-incubator</h1>\r\n                <h2 className={styles.signIn}>Sign In</h2>\r\n                <span className={styles.label}>Email</span>\r\n                <input value={email}\r\n                       onChange={onEmailChangeHandler}\r\n                       className={styles.input}\r\n                />\r\n                {/*email*/}\r\n\r\n                <span className={styles.label}>Password</span>\r\n                <input value={password}\r\n                       onChange={onPasswordChangeHandler}\r\n                       className={styles.input}\r\n                />\r\n                {/*password*/}\r\n\r\n\r\n                <NavLink to={\"/restore\"} className={styles.forgot}>Forgot Password</NavLink>\r\n\r\n                {errorShow ? <>\r\n                        {error && <span className={styles.error}>{error}</span>}\r\n                    </> :\r\n                    <button onClick={onLoginButtonClick}\r\n                            className={styles.button}>Login\r\n                    </button>}\r\n\r\n                {/*Button Loggin or show error */}\r\n\r\n\r\n                <span className={styles.dontHaveAcc}>Don’t have an account?</span>\r\n                <NavLink to={\"/signup\"} className={styles.signUp}>Sign Up</NavLink>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppRootStoreType } from \"../../bll/Store\";\r\nimport { UserType } from \"../../bll/profileReducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport const Profile = () => {\r\n\r\n    let user = useSelector<AppRootStoreType, UserType>(state => state.profileReducer.user)\r\n    const loggedIn = useSelector<AppRootStoreType, boolean>(state => state.loginReducer.isLogged)\r\n\r\n    const style = {\r\n        width: \"200px\",\r\n        height: \"200px\",\r\n    }\r\n\r\n    if(!loggedIn) {\r\n        return <Navigate to={ \"/login\" }/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span>{ user.name }</span>\r\n            <img style={ style } src={ user.avatar } alt=\"user avatar\"/>\r\n        </div>\r\n    )\r\n}","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from \"react\"\r\nimport style from \"./Input.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    },\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalInputClassName = `${ style.input } ${ error ? style.errorInput : style.input }`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={ 'text' }\r\n                onChange={ onChangeCallback }\r\n                onKeyPress={ onKeyPressCallback }\r\n                className={ style.input }\r\n\r\n                { ...restProps } // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            { error && <span className={ finalInputClassName }>{ error }</span> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\"\r\nimport style from \"./Button.module.css\"\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({ className, ...restProps }) => {\r\n\r\n    return (\r\n        <button\r\n            className={ style.button }\r\n            { ...restProps } // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import style from \"../forgot/ui/PasswordRestore/Restore.module.css\";\r\nimport SuperInputText from \"../../../components/Input/Input\";\r\nimport Button from \"../../../components/Button/Button\";\r\n\r\nexport const SignUp = (props: PropsType) => {\r\n\r\n    const {\r\n        email, onChangeEmail, error,\r\n        password, onChangePassword,\r\n        onClickHandler, isFetching,\r\n    } = props\r\n\r\n    return (\r\n        <div>\r\n            { isFetching ? <span className={ style.loading }>loading</span>\r\n                : <div className={ style.container }>\r\n                    <h1>Sign Up</h1>\r\n                    <SuperInputText type={ \"email\" }\r\n                                    placeholder={ \"Enter Email\" }\r\n                                    onChangeText={ onChangeEmail }\r\n                                    value={ email }/>\r\n                    <SuperInputText type={ \"password\" }\r\n                                    placeholder={ \"Enter Password\" }\r\n                                    onChangeText={ onChangePassword }\r\n                                    value={ password }\r\n                                    error={ error }/>\r\n                    <Button onClick={ onClickHandler }\r\n                            disabled={ isFetching }>Register</Button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PropsType = {\r\n    email: string\r\n    onChangeEmail: (value: string) => void\r\n    // emailError: null | string\r\n    password: string\r\n    onChangePassword: (value: string) => void\r\n    // passwordError: null | string\r\n    isFetching: boolean\r\n    onClickHandler: () => void\r\n    error: null | string\r\n}","import axios, { AxiosResponse } from \"axios\";\r\n\r\nconst instanceDev = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n})\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"http://localhost:7542/2.0/\",\r\n})\r\n\r\nconst from = \"test-front-admin <viktorburnyshev@gmail.com\"\r\n\r\nconst message = \"\\n<div style=\\\"background-color: #520a27; padding: 15px\\\">\\npassword recovery link: \\n<a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\\n</div>\\n\"\r\n\r\nexport const registrationAPI = {\r\n    forgot(email: string) {\r\n        return instanceDev.post<RequestForgotType, AxiosResponse<ForgotResponseType>>(`auth/forgot/`, {\r\n            email,\r\n            from,\r\n            message,\r\n        })\r\n    },\r\n    newPassword(data: NewPasswordRequestType) {\r\n        return instance.post(`auth/set-new-password/`, data)\r\n    },\r\n    signUp(email: string, password: string) {\r\n        return instance.post(`auth/register`, { email, password })\r\n    },\r\n}\r\n\r\n//types\r\ntype ForgotResponseType = {\r\n    info: string,\r\n    error: string,\r\n}\r\nexport type NewPasswordRequestType = {\r\n    password: string,\r\n    resetPasswordToken: string,\r\n}\r\ntype RequestForgotType = {\r\n    from: string,\r\n    email: string,\r\n    message: string\r\n}\r\n","import { Dispatch } from \"redux\"\r\nimport { registrationAPI } from \"../features/authorization/forgot/dal/ForgotApi\"\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    error: null as null | string,\r\n    setNewPassword: false,\r\n    sendEmail: false,\r\n}\r\n\r\nexport const passwordRecoverReducer =\r\n    (state = initialState, action: passwordRecoverActionTypes): InitialStateType => {\r\n        switch (action.type) {\r\n            case \"RECOVER/IS_FETCHING\":\r\n            case \"RECOVERY/ERROR\":\r\n                return { ...state, ...action.payload }\r\n            case \"RECOVERY/SET_NEW_PASSWORD\":\r\n                return { ...state, setNewPassword: true }\r\n            case \"RECOVERY/SEND_EMAIL\":\r\n                return { ...state, sendEmail: true }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n//actions\r\nexport const isFetching = (isFetching: boolean) => ( {\r\n    type: \"RECOVER/IS_FETCHING\",\r\n    payload: { isFetching },\r\n} as const );\r\nexport const setError = (error: null | string) => ( { type: \"RECOVERY/ERROR\", payload: { error } } as const );\r\nexport const setNewPassword = () => ( { type: \"RECOVERY/SET_NEW_PASSWORD\" } as const );\r\nexport const sendEmail = () => ( { type: \"RECOVERY/SEND_EMAIL\" } as const );\r\n\r\n//thunk\r\nexport const recoverTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(isFetching(true))\r\n    registrationAPI.forgot(email)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            dispatch(sendEmail())\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : ( e.message + \", more details in the console\" )\r\n            dispatch(setError(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetching(false))\r\n        })\r\n}\r\n\r\nexport const newPassword = (password: string, token: string) => (dispatch: Dispatch) => {\r\n    dispatch(isFetching(true))\r\n    registrationAPI.newPassword({ password, resetPasswordToken: token })\r\n        .then(res => {\r\n            dispatch(setNewPassword())\r\n            dispatch(setError(''))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : \"Some Error\"\r\n            dispatch(setError(error))\r\n            console.log(error)\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetching(false))\r\n        })\r\n}\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\n\r\nexport type SetErrorType = ReturnType<typeof setError>\r\ntype passwordRecoverActionTypes = ReturnType<typeof isFetching>\r\n    | ReturnType<typeof setNewPassword>\r\n    | ReturnType<typeof sendEmail>\r\n    | SetErrorType","import { Dispatch } from \"redux\"\r\nimport { registrationAPI } from \"../features/authorization/forgot/dal/ForgotApi\"\r\nimport { setError, SetErrorType } from \"./passwordRecoverReducer\";\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    // emailError: null as null | string,\r\n    // passwordError: null as null | string,\r\n    error: null as null | string,\r\n    isRegistrationSuccessful: false,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const signUpReducer =\r\n    (state = initialState, action: RegistrationActionTypes): InitialStateType => {\r\n        switch (action.type) {\r\n            case \"REGISTRATION/ISFETCHING\":\r\n                return { ...state, isFetching: action.isFetching }\r\n            case \"RECOVERY/ERROR\":\r\n                return { ...state, error: action.payload.error }\r\n            // case \"REGISTRATION/EMAILERROR\":\r\n            //     return { ...state, emailError: action.error }\r\n            // case \"REGISTRATION/PASSWORDERROR\":\r\n            //     return { ...state, passwordError: action.error }\r\n            case \"REGISTRATION/ISREGISTRATIONSUCCESSFUL\":\r\n                return {\r\n                    ...state,\r\n                    isRegistrationSuccessful: action.isRegistrationSuccessful,\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\nexport const toggleIsFetching = (isFetching: boolean) => ( {\r\n    type: \"REGISTRATION/ISFETCHING\",\r\n    isFetching,\r\n} as const );\r\nexport const toggleIsRegistrationSuccessful = (isRegistrationSuccessful: boolean) => ( {\r\n    type: \"REGISTRATION/ISREGISTRATIONSUCCESSFUL\",\r\n    isRegistrationSuccessful,\r\n} as const );\r\n// export const setEmailError = (error: null | string) => ( {\r\n//     type: \"REGISTRATION/EMAILERROR\",\r\n//     error,\r\n// } as const );\r\n// export const setPasswordError = (error: null | string) => ( {\r\n//     type: \"REGISTRATION/PASSWORDERROR\",\r\n//     error,\r\n// } as const );\r\n\r\n\r\nexport const signUpTC = (email: string, password: string) => (dispatch: Dispatch<RegistrationActionTypes>) => {\r\n    dispatch(toggleIsFetching(true))\r\n    registrationAPI.signUp(email, password)\r\n        .then(() => {\r\n            dispatch(toggleIsRegistrationSuccessful(true))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(setError(err.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(toggleIsFetching(false))\r\n        })\r\n}\r\n\r\ntype RegistrationActionTypes = ReturnType<typeof toggleIsFetching>\r\n    // | ReturnType<typeof setEmailError>\r\n    // | ReturnType<typeof setPasswordError>\r\n    | ReturnType<typeof toggleIsRegistrationSuccessful>\r\n    | SetErrorType\r\n","import { SignUp } from \"./SignUp\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppRootStoreType } from \"../../../bll/Store\";\r\nimport { signUpTC } from \"../../../bll/signUpReducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { setError } from \"../../../bll/passwordRecoverReducer\";\r\n\r\n\r\nexport const SignUpContainer = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n\r\n    const error = useSelector<AppRootStoreType, null | string>(state => state.registration.error)\r\n    // const emailError = useSelector<AppRootStoreType, null | string>(state => state.registration.emailError)\r\n    // const passwordError = useSelector<AppRootStoreType, null | string>(state => state.registration.passwordError)\r\n    const isFetching = useSelector<AppRootStoreType, boolean>(state => state.registration.isFetching)\r\n    const isRegistrationSuccessful = useSelector<AppRootStoreType, boolean>(state => state.registration.isRegistrationSuccessful)\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeEmail = (value: string) => {\r\n        setEmail(value)\r\n        dispatch(setError(null))\r\n    }\r\n    const onChangePassword = (value: string) => {\r\n        setPassword(value)\r\n        dispatch(setError(null))\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n\r\n        if(email === '') {\r\n            dispatch(setError('Required'))\r\n        } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setError('Invalid email address'))\r\n            return\r\n        }\r\n\r\n        if(password.length < 7) {\r\n            dispatch(setError('Password should be more than 7 characters'))\r\n        }\r\n\r\n        if(!error) {\r\n            dispatch(signUpTC(email, password))\r\n        }\r\n    }\r\n\r\n    if(isRegistrationSuccessful) {\r\n        return <Navigate to={ \"/\" }/>\r\n    }\r\n\r\n    return (\r\n        <SignUp email={ email }\r\n                onChangeEmail={ onChangeEmail }\r\n            // emailError={emailError}\r\n                password={ password }\r\n                onChangePassword={ onChangePassword }\r\n            // passwordError={passwordError}\r\n                isFetching={ isFetching }\r\n                onClickHandler={ onClickHandler }\r\n                error={ error }/>\r\n    )\r\n}","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from \"react\"\r\nimport style from \"./Checkbox.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    },\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={ 'checkbox' }\r\n                onChange={ onChangeCallback }\r\n                className={ style.checkbox }\r\n\r\n                { ...restProps } // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import Input from \"../Input/Input\";\r\nimport Button from \"../Button/Button\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nimport style from \"./Test.module.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport const Test = () => {\r\n    const [text, setText] = useState<string>(\"\")\r\n    const error = text ? '' : \"error\"\r\n\r\n    return (\r\n        <div className={ style.testContainer }>\r\n            <div className={ style.inputContainer }>\r\n                <span>Input Example</span>\r\n                <Input onChangeText={ setText }\r\n                       value={ text }\r\n                       error={ error }/>\r\n            </div>\r\n            <div className={ style.buttonContainer }>\r\n                <span>Button Example</span>\r\n                <Button>Test</Button>\r\n            </div>\r\n            <div className={ style.checkboxContainer }>\r\n                <span>Checkbox Example</span>\r\n                <Checkbox/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","export const Error = () => {\r\n    return <div>Error</div>\r\n}","import style from \"./SendEmail.module.css\"\r\n\r\nexport const SendEmail = () => {\r\n    return (\r\n        <div className={style.container}>\r\n            <h1>Check email</h1>\r\n\r\n            <h4>We've sent an Email with instructions to your Email</h4>\r\n        </div>\r\n    )\r\n}","import Input from \"../../../../../components/Input/Input\";\r\nimport Button from \"../../../../../components/Button/Button\";\r\nimport style from \"./Restore.module.css\"\r\nimport { SendEmail } from \"../SendEmail/SendEmail\";\r\n\r\n\r\nexport const Restore = (props: PropsType) => {\r\n\r\n    const {\r\n        email,\r\n        error,\r\n        onChangeText,\r\n        onClickHandler,\r\n        isFetching,\r\n        sendEmail,\r\n    } = props\r\n\r\n    return (\r\n        <div>\r\n            <div className={ style.loadingBox }>\r\n                { isFetching ? <span className={ style.loading }>loading</span> : '' }\r\n            </div>\r\n            { !sendEmail ?\r\n                <div className={ style.container }>\r\n                    <h1>Forgot your password ?</h1>\r\n                    <Input type={ \"email\" }\r\n                           placeholder={ \"Enter Email\" }\r\n                           onChangeText={ onChangeText }\r\n                           value={ email }\r\n                           error={ error }/>\r\n                    <h5>Enter your email address and we will send you further\r\n                        instructions</h5>\r\n                    <Button onClick={ onClickHandler } disabled={ isFetching }>Send</Button>\r\n                </div>\r\n                : <SendEmail/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\ntype PropsType = {\r\n    email: string\r\n    error: null | string\r\n    onChangeText: (value: string) => void\r\n    onClickHandler: () => void\r\n    isFetching: boolean\r\n    sendEmail: boolean\r\n}","import { Restore } from \"./Restore\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppRootStoreType } from \"../../../../../bll/Store\";\r\nimport { recoverTC, setError } from \"../../../../../bll/passwordRecoverReducer\";\r\n\r\nexport const PasswordRestoreContainer = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n\r\n    const error = useSelector<AppRootStoreType, null | string>(state => state.recovery.error)\r\n    const isFetching = useSelector<AppRootStoreType, boolean>(state => state.recovery.isFetching)\r\n    const sendEmail = useSelector<AppRootStoreType, boolean>(state => state.recovery.sendEmail)\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeEmail = (value: string) => {\r\n        setEmail(value)\r\n        if(error !== null) {\r\n            dispatch(setError(error))\r\n        }\r\n        dispatch(setError(null))\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        if(email === '') {\r\n            dispatch(setError('Required'))\r\n        }\r\n        if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setError('Invalid email address'))\r\n        } else {\r\n            dispatch(recoverTC(email))\r\n            setEmail('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Restore email={ email }\r\n                 onChangeText={ onChangeEmail }\r\n                 onClickHandler={ onClickHandler }\r\n                 error={ error }\r\n                 isFetching={ isFetching }\r\n                 sendEmail={ sendEmail }/>\r\n    )\r\n}","import SuperInputText from \"../../../../../components/Input/Input\";\r\nimport Button from \"../../../../../components/Button/Button\";\r\nimport style from \"./NewPassword.module.css\"\r\nimport { Navigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const NewPassword = (props: PropsType) => {\r\n\r\n    const {\r\n        onChange, password, error,\r\n        onSubmit, isFetching, confirmPass,\r\n        onChangeConfirmPass, setNewPassword,\r\n    } = props\r\n\r\n    if(setNewPassword) {\r\n        return <Navigate to=\"/login\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={ style.loadingBox }>\r\n                { isFetching ? <span className={ style.loading }>Loading</span> : '' }\r\n            </div>\r\n            <div className={ style.container }>\r\n                <h1>Create new Password</h1>\r\n                <SuperInputText type={ \"password\" }\r\n                                placeholder={ \"Enter new password\" }\r\n                                onChangeText={ onChange }\r\n                                value={ password }/>\r\n                <SuperInputText type={ \"password\" }\r\n                                placeholder={ \"Confirm new password\" }\r\n                                onChangeText={ onChangeConfirmPass }\r\n                                value={ confirmPass } error={ error }/>\r\n                <Button onClick={ onSubmit } disabled={ isFetching }>Create new\r\n                    password</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\ntype PropsType = {\r\n    onChange: (value: string) => void\r\n    password: string\r\n    error: string | null\r\n    onSubmit: () => void\r\n    isFetching: boolean\r\n    confirmPass: string\r\n    onChangeConfirmPass: (value: string) => void\r\n    setNewPassword: boolean\r\n}","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { newPassword, setError } from \"../../../../../bll/passwordRecoverReducer\";\r\nimport { AppRootStoreType } from \"../../../../../bll/Store\";\r\nimport { NewPassword } from \"./NewPassword\";\r\n\r\n\r\nexport const NewPasswordContainer = () => {\r\n\r\n    const { token } = useParams<\"token\">();\r\n    const [pass, setPass] = useState<string>('');\r\n    const [confirmPass, setConfirmPass] = useState<string>('');\r\n    const dispatch = useDispatch();\r\n    const error = useSelector<AppRootStoreType, string | null>(state => state.recovery.error);\r\n    const isFetching = useSelector<AppRootStoreType, boolean>(state => state.recovery.isFetching);\r\n    const setNewPassword = useSelector<AppRootStoreType, boolean>(state => state.recovery.setNewPassword);\r\n\r\n    const onSubmit = () => {\r\n        if(pass !== confirmPass) {\r\n            dispatch(setError('passwords must be match'))\r\n        } else {\r\n            dispatch(newPassword(pass, token || ''))\r\n        }\r\n    }\r\n\r\n    const onChangePass = (value: string) => {\r\n        setPass(value)\r\n        dispatch(setError(null))\r\n    }\r\n    const onChangeConfirmPass = (value: string) => {\r\n        setConfirmPass(value)\r\n    }\r\n\r\n    return <NewPassword onChange={ onChangePass }\r\n                        password={ pass }\r\n                        confirmPass={ confirmPass }\r\n                        error={ error }\r\n                        onSubmit={ onSubmit }\r\n                        isFetching={ isFetching }\r\n                        onChangeConfirmPass={ onChangeConfirmPass }\r\n                        setNewPassword={setNewPassword}/>\r\n}","import axios from \"axios\";\r\nimport { CardPackType } from \"../CardPacks/CardPacksReducer\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"http://localhost:7542/2.0/\",\r\n})\r\n\r\nexport const cardPacksAPI = {\r\n    getCardPacks(pageCount:number, page:number, sortPacks:any){\r\n       return instance.get<CardsResponseType>\r\n       (`cards/pack`, {params: {pageCount:pageCount, page:page, sortPacks:sortPacks}})\r\n    },\r\n    deleteCardPack(id:string){\r\n        return instance.delete(`cards/pack?id=${id}`)\r\n    },\r\n    createCardPack(){\r\n        return instance.post(`cards/pack`, {cardsPack: {name: 'dfdsdf'}})\r\n    },\r\n    updateCardPack(id: string, name: string){\r\n        return instance.put(`cards/pack`, {cardsPack: {_id: id, name}})\r\n    }\r\n}\r\n\r\nexport type CardsResponseType = {\r\n    cardPacks: CardPackType[],\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}","import { cardPacksAPI } from \"./CardPacksAPI\";\r\nimport { AppRootStoreType, AppThunkType } from \"../../../bll/Store\";\r\n\r\nexport type CardPackType = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: \"PackName2\"\r\n    path: \"/def\"\r\n    private: false\r\n    rating: number\r\n    shots: number\r\n    type: \"pack\"\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nconst initialState = {\r\n    cardPacks: [] as CardPackType[],\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 1,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 5,\r\n    sortPacks: '0cardsCount',\r\n}\r\n\r\nexport const cardPacksReducer =\r\n    (state = initialState, action: CardPacksActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"SET-CARD-PACKS\":\r\n            return {...state, cardPacks: action.cards}\r\n        case \"PAGINATOR/SET_TOTAL_ITEMS_COUNT\":\r\n            return {...state, cardPacksTotalCount: action.totalItemsCount}\r\n        case \"PAGINATOR/SET_CURRENT_PAGE\":\r\n            return { ...state, page: action.page}\r\n        case \"PAGINATOR/SET_PAGE_COUNT\":\r\n            return {...state, pageCount: action.pageCount}\r\n        case \"SORTING\":\r\n            return {...state, sortPacks: action.sortPack}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getCardPacksTC = (): AppThunkType => {\r\n    return (dispatch, getState: () => AppRootStoreType) => {\r\n        const state = getState();\r\n        const { pageCount, page, sortPacks } = state.cards\r\n        cardPacksAPI.getCardPacks(pageCount, page, sortPacks)\r\n            .then(res => {\r\n                dispatch(setCardPacks(res.data.cardPacks))\r\n                dispatch(setTotalItemsCount(res.data.cardPacksTotalCount))\r\n                // dispatch(loggingInAC(true))\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCardPackTC = (id: string): AppThunkType => {\r\n    return (dispatch) => {\r\n        cardPacksAPI.deleteCardPack(id)\r\n            .then(() => {\r\n                dispatch(getCardPacksTC())\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n}\r\nexport const createCardPackTC = (): AppThunkType => {\r\n    return (dispatch) => {\r\n        cardPacksAPI.createCardPack()\r\n            .then(() => {\r\n                dispatch(getCardPacksTC())\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateCardPackTC = (id: string, name: string): AppThunkType => {\r\n    return (dispatch) => {\r\n        cardPacksAPI.updateCardPack(id, name)\r\n            .then(() => {\r\n                dispatch(getCardPacksTC())\r\n            })\r\n            .catch((error) => {\r\n            })\r\n    }\r\n}\r\n\r\n\r\nconst setCardPacks = (cards: Array<CardPackType>) => ( {\r\n    type: \"SET-CARD-PACKS\",\r\n    cards,\r\n} as const )\r\n\r\nexport const setTotalItemsCount = (totalItemsCount: number) => ( {\r\n    type: \"PAGINATOR/SET_TOTAL_ITEMS_COUNT\",\r\n    totalItemsCount,\r\n} as const )\r\n\r\nexport const setCurrentPageAC = (page: number) => ( {\r\n    type: \"PAGINATOR/SET_CURRENT_PAGE\",\r\n    page,\r\n} as const )\r\n\r\nexport const setPageCount = (pageCount: number) => ( {\r\n    type: \"PAGINATOR/SET_PAGE_COUNT\",\r\n    pageCount,\r\n} as const )\r\n\r\nexport const getSorting = (sortPack:any) => ( {\r\n    type: \"SORTING\",\r\n    sortPack\r\n} as const)\r\n\r\ntype SetCardPacksActionType = ReturnType<typeof setCardPacks>\r\n    | ReturnType<typeof setTotalItemsCount>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setPageCount>\r\n    | ReturnType<typeof getSorting>\r\n\r\nexport type CardPacksActionsType = SetCardPacksActionType\r\n\r\ntype InitStateType = typeof initialState","import Button from \"../../../Button/Button\";\r\nimport React from \"react\";\r\nimport {CardPackType} from \"../CardPacksReducer\";\r\n\r\ntype CardPackPropsType = {\r\n    cardPack: CardPackType\r\n    deleteCardPack: (id: string) => void\r\n    editCardPack: (id: string, name: string) => void\r\n}\r\n\r\nexport const CardPack = (props: CardPackPropsType) => {\r\n    const {cardPack} = props;\r\n\r\n    const deleteCardPack = () => {\r\n        props.deleteCardPack(cardPack._id)\r\n    }\r\n\r\n    const editCardPack = () => {\r\n        //  захардкодженное имя\r\n        props.editCardPack(cardPack._id, 'ssssss')\r\n    }\r\n\r\n    const learnCardPack = () => {\r\n\r\n    }\r\n\r\n\r\n    return <tr>\r\n        <td>{cardPack.name}</td>\r\n        <td>{cardPack.cardsCount}</td>\r\n        <td>{cardPack.updated}</td>\r\n        <td>{cardPack.user_name}</td>\r\n        <td>\r\n            <Button onClick={deleteCardPack}>Delete</Button>\r\n            <Button onClick={editCardPack}>Edit</Button>\r\n            <Button onClick={learnCardPack}>Learn</Button>\r\n        </td>\r\n    </tr>\r\n}","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport style from './SuperSelect.module.css';\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nexport const SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options? options.map((o,i)=> (\r\n        <option key={i + '' + o} value={o}>\r\n            {o}\r\n        </option>\r\n    )) : [];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select className={style.select} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\n","import style from \"./Paginator.module.css\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppRootStoreType } from \"../../bll/Store\";\r\nimport { setCurrentPageAC, setPageCount } from \"../Table/CardPacks/CardPacksReducer\";\r\nimport { SuperSelect } from \"../Select/SuperSelect\";\r\nimport Button from \"../Button/Button\";\r\n\r\nexport const Paginator = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const totalItemsCount = useSelector<AppRootStoreType, number>(state => state.cards.cardPacksTotalCount)\r\n    const currentPage = useSelector<AppRootStoreType, number>(state => state.cards.page)\r\n    const pageSize = useSelector<AppRootStoreType, number>(state => state.cards.pageCount)\r\n    const pageItems = [3, 5, 10];\r\n\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const [value, setValue] = useState(pageItems[1])\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n\r\n    }\r\n    const portionSize = 5\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const leftPortionPageNumber = ( portionNumber - 1 ) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const onPageChanged = (page: number) => {\r\n        dispatch(setCurrentPageAC(page))\r\n    }\r\n\r\n    const onChangeSelect = (items: 3 | 5 | 10) => {\r\n        dispatch(setPageCount(items))\r\n        setValue(items)\r\n    }\r\n\r\n    return (\r\n        <div className={ style.paginator }>\r\n\r\n            { portionNumber > 1 &&\r\n            <Button\r\n                onClick={ () => {setPortionNumber(portionNumber - 1)} }>Left</Button> }\r\n            <SuperSelect options={ pageItems }\r\n                         value={ value }\r\n                         onChangeOption={ onChangeSelect }\r\n            />\r\n\r\n            { pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(m =>\r\n                    <span\r\n                        className={ currentPage === m ? style.selectedPage : style.pageNumber }\r\n                        onClick={ () => {onPageChanged(m)} }>\r\n                { m }\r\n            </span>)\r\n            }\r\n\r\n            { portionCount > portionNumber &&\r\n            <Button\r\n                onClick={ () => {setPortionNumber(portionNumber + 1)} }>Right</Button> }\r\n        </div>\r\n    )\r\n}","import { FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getSorting } from \"../Table/CardPacks/CardPacksReducer\";\r\n\r\nexport const Sorting:FC<PropsType> = ({ sortName }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const setSortUp = ()=> {\r\n        dispatch(getSorting(`0${sortName}`))\r\n    }\r\n    const setSortDown = ()=> {\r\n        dispatch(getSorting(`1${sortName}`))\r\n    }\r\n    return(\r\n        <div>\r\n            <button onClick={setSortUp}>+</button>\r\n            <button onClick={setSortDown}>-</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\ntype PropsType = {\r\n    sortName: string\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport s from './Table.module.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppRootStoreType } from \"../../bll/Store\";\r\nimport {\r\n    CardPackType,\r\n    createCardPackTC,\r\n    deleteCardPackTC,\r\n    getCardPacksTC,\r\n    updateCardPackTC,\r\n} from \"./CardPacks/CardPacksReducer\";\r\nimport Button from \"../Button/Button\";\r\nimport { CardPack } from \"./CardPacks/CardPack/CardPack\";\r\nimport { Paginator } from \"../Paginator/Paginator\";\r\nimport { Sorting } from \"../Sorting/Sorting\";\r\n\r\nexport const Table = () => {\r\n    const dispatch = useDispatch()\r\n    const loggedIn = useSelector<AppRootStoreType, boolean>(state => state.loginReducer.isLogged)\r\n    const cardPacks = useSelector<AppRootStoreType, Array<CardPackType>>(state => state.cards.cardPacks)\r\n    const page = useSelector<AppRootStoreType, number>(state => state.cards.page)\r\n    const pageCount = useSelector<AppRootStoreType, number>(state => state.cards.pageCount)\r\n    const sortPacks = useSelector<AppRootStoreType, string>(state => state.cards.sortPacks)\r\n\r\n    useEffect(() => {\r\n        if (!loggedIn) {\r\n            return\r\n        }\r\n        dispatch(getCardPacksTC())\r\n    }, [page, pageCount, sortPacks,loggedIn])\r\n\r\n\r\n    const deleteCardPack = (id: string) => {\r\n        dispatch(deleteCardPackTC(id))\r\n    }\r\n\r\n    const editCardPack = (id: string, name: string) => {\r\n        dispatch(updateCardPackTC(id, name))\r\n    }\r\n    const LearnCardPack = () => {\r\n\r\n    }\r\n    const createCardPack = () => {\r\n        dispatch(createCardPackTC())\r\n    }\r\n\r\n    return (<>\r\n            <Button onClick={createCardPack}> add cardpack</Button>\r\n            <table className={s.table}>\r\n                <thead>\r\n                <tr>\r\n                    <td>Name<Sorting sortName={'name'}/></td>\r\n                    <td>CardsCount<Sorting sortName={'cardsCount'}/></td>\r\n                    <td>Last Updated<Sorting sortName={'updated'}/></td>\r\n                    <td>Created by<Sorting sortName={'created'}/></td>\r\n                    <td>Actions</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {cardPacks.map(cardPack => {\r\n                    return <CardPack cardPack={cardPack}\r\n                                     deleteCardPack={deleteCardPack}\r\n                                     editCardPack={editCardPack}\r\n                    />\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        <Paginator/>\r\n    </>)\r\n}","import { Route, Routes } from \"react-router-dom\";\r\nimport { Login } from \"./Login/Login\";\r\nimport { Profile } from \"./Profile/Profile\";\r\nimport { SignUpContainer} from \"../features/authorization/signUp/SignUpContainer\";\r\nimport { Test } from \"./Test/Test\";\r\nimport { Error } from \"./Error\"\r\nimport { PasswordRestoreContainer } from \"../features/authorization/forgot/ui/PasswordRestore/PasswordRestoreContainer\";\r\nimport { NewPasswordContainer } from \"../features/authorization/forgot/ui/NewPassword/NewPasswordContainer\";\r\nimport {Table} from \"./Table/Table\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"login\",\r\n    PROFILE: \"profile\",\r\n    SIGN_UP: \"signup\",\r\n    PASSWORD_RESTORE: 'restore',\r\n    NEW_PASSWORD: 'set-new-password/:token',\r\n    TEST: 'test',\r\n    CARD_PACKS: 'packs'\r\n}\r\n\r\nexport const Routing = () => {\r\n    return (\r\n        <Routes>\r\n            <Route path={ \"/\" } element={ <Login/> }/>\r\n            <Route path={ PATH.PROFILE } element={ <Profile/> }/>\r\n            <Route path={ PATH.SIGN_UP } element={ <SignUpContainer/> }/>\r\n            <Route path={ PATH.PASSWORD_RESTORE } element={ <PasswordRestoreContainer/> }/>\r\n            <Route path={ PATH.NEW_PASSWORD } element={ <NewPasswordContainer/> }/>\r\n            <Route path={ PATH.TEST } element={ <Test/> }/>\r\n            <Route path={ PATH.LOGIN } element={ <Login/> }/>\r\n            <Route path={ PATH.CARD_PACKS } element={ <Table/> }/>\r\n            <Route path=\"*\" element={ <Error/> }/>\r\n        </Routes>\r\n    )\r\n}\r\n\r\n//","import { PATH } from \"../Routes\";\r\n\r\nexport const sidebarData = [\r\n    {\r\n        title: \"Profile\",\r\n        path:  PATH.PROFILE,\r\n    },\r\n    {\r\n        title: \"SignUp\",\r\n        path:  PATH.SIGN_UP,\r\n    },\r\n    {\r\n        title: \"Restore Password\",\r\n        path:  PATH.PASSWORD_RESTORE,\r\n    },\r\n    {\r\n        title: \"New password\",\r\n        path:  PATH.NEW_PASSWORD,\r\n    },\r\n    {\r\n        title: \"Test\",\r\n        path:  PATH.TEST,\r\n    },\r\n    {\r\n        title: \"CardPacks\",\r\n        path:  PATH.CARD_PACKS,\r\n    },\r\n]","import style from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { useState } from \"react\";\r\nimport { sidebarData } from \"./sidebarData\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppRootStoreType } from \"../../bll/Store\";\r\nimport { logout } from \"../../bll/loginReducer\";\r\n\r\nexport const Navbar = () => {\r\n    const [sidebar, setSidebar] = useState<boolean>(false)\r\n    const isLoggedIn = useSelector<AppRootStoreType, boolean>(state => state.loginReducer.isLogged)\r\n    const dispatch = useDispatch();\r\n\r\n    const showSidebar = () => {\r\n        setSidebar(!sidebar)\r\n    }\r\n\r\n    const logoutHandle = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return <>\r\n        <div className={ style.navbar }>\r\n            <NavLink to=\"#\" className={ style.menuBars }>\r\n                <FaIcons.FaBars onClick={ showSidebar }/>\r\n            </NavLink>\r\n            {isLoggedIn ? <a className={ style.login } onClick={logoutHandle}>\r\n                logout\r\n            </a> : <NavLink to=\"/login\" className={ style.login }>Login</NavLink>}\r\n\r\n        </div>\r\n        <nav\r\n            className={ sidebar ? `${ style['navMenu'] } ${ style['active'] }` : style['navMenu'] }>\r\n            <ul className={ style.navMenuItems } onClick={ showSidebar }>\r\n                <li className={ style.navbarToggle }>\r\n                    <NavLink to=\"#\" className={ style.menuBars }>\r\n                        <AiIcons.AiOutlineClose/>\r\n                    </NavLink>\r\n                </li>\r\n                { sidebarData.map((item, index) => {\r\n                    return (\r\n                        <li key={ index } className={ style.navText }>\r\n                            <NavLink to={ item.path }>\r\n                                <span>{ item.title }</span>\r\n                            </NavLink>\r\n                        </li>\r\n                    );\r\n                }) }\r\n            </ul>\r\n        </nav>\r\n    </>\r\n}","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { Routing } from \"./components/Routes\";\r\nimport { Navbar } from \"./components/Navbar/Navbar\";\r\nimport { authMe } from \"../src/bll/loginReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nexport const App = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        dispatch(authMe())\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <Routing/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState: InitialStateType = {}\r\n\r\nexport const firstReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case\"SOME_ACTION\": {\r\n            return state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const someAC = () => {\r\n    return { type: \"SOME_ACTION\", payload: {} } as const\r\n}\r\n\r\ntype SomeACType = ReturnType<typeof someAC>\r\ntype InitialStateType = {}\r\ntype ActionType = SomeACType","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { firstReducer } from \"./FirstReducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport { loginReducer } from \"./loginReducer\";\r\nimport { profileReducer } from \"./profileReducer\";\r\nimport { passwordRecoverReducer } from \"./passwordRecoverReducer\";\r\nimport { signUpReducer } from \"./signUpReducer\";\r\nimport {CardPacksActionsType, cardPacksReducer} from \"../components/Table/CardPacks/CardPacksReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    firstReducer,\r\n    loginReducer,\r\n    profileReducer,\r\n    recovery: passwordRecoverReducer,\r\n    registration: signUpReducer,\r\n    cards: cardPacksReducer\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport type AppRootStoreType = ReturnType<typeof reducers>\r\n\r\n//все типы экшенов для всего app\r\nexport type AppActionsType=CardPacksActionsType;\r\n\r\nexport type AppThunkType<ReturnType=void>=ThunkAction<\r\n    ReturnType,\r\n    AppRootStoreType,\r\n    unknown,\r\n    AppActionsType\r\n    >\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./bll/Store\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={ store }>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__2jcyA\",\"formWrapper\":\"Login_formWrapper__3ERhL\",\"pageTitle\":\"Login_pageTitle__3E-SO\",\"signIn\":\"Login_signIn__3jPzg\",\"label\":\"Login_label__1s3a7\",\"button\":\"Login_button__uA5Yx\",\"error\":\"Login_error__1mrmE\",\"input\":\"Login_input__G5yYG\",\"forgot\":\"Login_forgot__2d_bW\",\"dontHaveAcc\":\"Login_dontHaveAcc__2dXcu\",\"signUp\":\"Login_signUp__2eaHN\"};"],"sourceRoot":""}